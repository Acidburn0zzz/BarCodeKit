//
//  BCKCode128ContentCodeCharacter.m
//  BarCodeKit
//
//  Created by Jaanus Siim on 8/25/13.
//  Copyright (c) 2013 Oliver Drobnik. All rights reserved.
//

#import "BCKCode128ContentCodeCharacter.h"

static char *char_encodings[103][2] = {
        {" ", "11011001100"},
        {"!", "11001101100"},
        {"\"", "11001100110"},
        {"#", "10010011000"},
        {"$", "10010001100"},
        {"%", "10001001100"},
        {"&", "10011001000"},
        {"'", "10011000100"},
        {"(", "10001100100"},
        {")", "11001001000"},
        {"*", "11001000100"},
        {"+", "11000100100"},
        {",", "10110011100"},
        {"-", "10011011100"},
        {".", "10011001110"},
        {"/", "10111001100"},
        {"0", "10011101100"},
        {"1", "10011100110"},
        {"2", "11001110010"},
        {"3", "11001011100"},
        {"4", "11001001110"},
        {"5", "11011100100"},
        {"6", "11001110100"},
        {"7", "11101101110"},
        {"8", "11101001100"},
        {"9", "11100101100"},
        {":", "11100100110"},
        {";", "11101100100"},
        {"<", "11100110100"},
        {"=", "11100110010"},
        {">", "11011011000"},
        {"?", "11011000110"},
        {"@", "11000110110"},
        {"A", "10100011000"},
        {"B", "10001011000"},
        {"C", "10001000110"},
        {"D", "10110001000"},
        {"E", "10001101000"},
        {"F", "10001100010"},
        {"G", "11010001000"},
        {"H", "11000101000"},
        {"I", "11000100010"},
        {"J", "10110111000"},
        {"K", "10110001110"},
        {"L", "10001101110"},
        {"M", "10111011000"},
        {"N", "10111000110"},
        {"O", "10001110110"},
        {"P", "11101110110"},
        {"Q", "11010001110"},
        {"R", "11000101110"},
        {"S", "11011101000"},
        {"T", "11011100010"},
        {"U", "11011101110"},
        {"V", "11101011000"},
        {"W", "11101000110"},
        {"X", "11100010110"},
        {"Y", "11101101000"},
        {"Z", "11101100010"},
        {"[", "11100011010"},
        {"\\", "11101111010"},
        {"]", "11001000010"},
        {"^", "11110001010"},
        {"_", "10100110000"},
        {"", "10100001100"},
        {"", "10010110000"},
        {"", "10010000110"},
        {"", "10000101100"},
        {"", "10000100110"},
        {"", "10110010000"},
        {"", "10110000100"},
        {"", "10011010000"},
        {"", "10011000010"},
        {"", "10000110100"},
        {"", "10000110010"},
        {"", "11000010010"},
        {"", "11001010000"},
        {"", "11110111010"},
        {"", "11000010100"},
        {"", "10001111010"},
        {"", "10100111100"},
        {"", "10010111100"},
        {"", "10010011110"},
        {"", "10111100100"},
        {"", "10011110100"},
        {"", "10011110010"},
        {"", "11110100100"},
        {"", "11110010100"},
        {"", "11110010010"},
        {"", "11011011110"},
        {"", "11011110110"},
        {"", "11110110110"},
        {"", "10101111000"},
        {"", "10100011110"},
        {"", "10001011110"},
        {"", "10111101000"},
        {"", "10111100010"},
        {"", "11110101000"},
        {"", "11110100010"},
        {"", "10111011110"},
        {"", "10111101110"},
        {"", "11101011110"},
        {"", "11110101110"}};


@implementation BCKCode128ContentCodeCharacter
{
    char _character;
}

- (instancetype)initWithCharacter:(NSString *)character
{
    self = [super init];

    if (self)
    {
        _character = [character UTF8String][0];
    }

    return self;
}

- (NSString *)bitString
{
    for (NSUInteger i=0; i<64; i++)
    {
        char testChar = char_encodings[i][0][0];

        if (testChar == _character)
        {
            return [NSString stringWithUTF8String:char_encodings[i][1]];
        }
    }

    return NULL;
}

+ (NSString *)binaryStringAtPosition:(NSUInteger)position
{
    for (NSUInteger i=0; i<103; i++)
    {
        if (i == position)
        {
            return [NSString stringWithUTF8String:char_encodings[i][1]];
        }
    }

    return NULL;
}

- (NSUInteger)position
{
    for (NSUInteger i=0; i<64; i++)
    {
        char testChar = char_encodings[i][0][0];

        if (testChar == _character)
        {
            return i;
        }
    }

    return NSNotFound;
}

@end
